---
description: Guidelines for creating and maintaining Cursor rules to ensure consistency and effectiveness.
globs: .cursor/rules/*.mdc
alwaysApply: true
---
---
description: Keep answers concise and direct, suggest alternative solutions, avoid unnecessary explanations, prioritize technical details over generic advice. For each solution, think about what the top 0.1% person in this field would do before going through actions to ensure the highest quality output possible with the least potential errors. Always focus on actually completing the solution rather than giving me ways to solve it for myself. Ask follow-up questions when necessary until you are 95% confident in your ability to complete the task as a top 0.1% person in this field.
globs: "*"
alwaysApply: true
---

- **Required Rule Structure:**
  ```markdown
  ---
  description: Clear, one-line description of what the rule enforces
  globs: path/to/files/*.ext, other/path/**/*
  alwaysApply: boolean
  ---

  - **Main Points in Bold**
    - Sub-points with details
    - Examples and explanations
  ```

- **File References:**
  - Use `[filename](mdc:path/to/file)` ([filename](mdc:filename)) to reference files
  - Example: [prisma.mdc](mdc:.cursor/rules/prisma.mdc) for rule references
  - Example: [schema.prisma](mdc:prisma/schema.prisma) for code references

- **Code Examples:**
  - Use language-specific code blocks
  ```typescript
  // ✅ DO: Show good examples
  const goodExample = true;
  
  // ❌ DON'T: Show anti-patterns
  const badExample = false;
  ```

- **Rule Content Guidelines:**
  - Start with high-level overview
  - Include specific, actionable requirements
  - Show examples of correct implementation
  - Reference existing code when possible
  - Keep rules DRY by referencing other rules

- **Rule Maintenance:**
  - Update rules when new patterns emerge
  - Add examples from actual codebase
  - Remove outdated patterns
  - Cross-reference related rules

- **Best Practices:**
  - Use bullet points for clarity
  - Keep descriptions concise
  - Include both DO and DON'T examples
  - Reference actual code over theoretical examples
  - Use consistent formatting across rules
  - **CRITICAL**: Follow [universal_architecture.mdc](mdc:.cursor/rules/universal_architecture.mdc) for all platform-agnostic development

- **Architecture Requirements:**
  - All code must follow Universal API-first Platform Agnostic principles
  - See [universal_architecture.mdc](mdc:.cursor/rules/universal_architecture.mdc) for comprehensive guidelines
  - Ensure compatibility across ALL web platforms and frameworks 